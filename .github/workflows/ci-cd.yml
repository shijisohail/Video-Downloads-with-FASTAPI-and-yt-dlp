name: Deploy to Server

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual deployment'
        required: false
        default: 'Manual deployment'

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          echo "🚀 Starting deployment - ${{ github.event.inputs.reason || 'Auto deployment' }}"
          
          # Navigate to repository
          cd /home/ubuntu/Video-Downloads-with-FASTAPI-and-yt-dlp
          
          # Pull latest changes from GitHub
          echo "📥 Pulling latest code from GitHub..."
          git pull origin master
          
          # Stop and remove existing containers using Makefile
          echo "🛑 Stopping and cleaning containers..."
          make docker-stop
          make docker-clean
          
          # Ensure directories exist and have correct permissions
          echo "📁 Setting up directories and permissions..."
          make setup-dirs
          
          # Set ownership for Docker container user (UID 999 = appuser)
          sudo chown -R 999:999 downloaded_videos logs cookies 2>/dev/null || {
            echo "Setting permissions as current user instead..."
            chmod -R 777 downloaded_videos logs cookies
          }
          
          # Build and run new container using Makefile
          echo "🚀 Building and running new container..."
          make docker-run
          
          # Health check with comprehensive debugging
          echo "⏳ Waiting for application to start..."
          sleep 45
          
          echo "🔍 Checking if container is running..."
          if docker ps | grep video-downloader-app; then
            echo "✅ Container is running"
          else
            echo "❌ Container is not running!"
            docker ps -a | grep video-downloader-app
            echo "📋 Container logs:"
            docker logs video-downloader-app
            exit 1
          fi
          
          echo "📋 Checking initial container logs..."
          docker logs video-downloader-app --tail 15
          
          echo "🌍 Checking port accessibility..."
          netstat -tlnp | grep :8888 || echo "Port 8888 not listening yet"
          
          echo "🩺 Performing health check with retries..."
          for i in {1..6}; do
            echo "Health check attempt $i/6..."
            
            # Try multiple endpoints
            if curl -f -s -m 10 http://localhost:8888/api/v1/health > /dev/null 2>&1; then
              echo "✅ Health endpoint responsive!"
              curl -s http://localhost:8888/api/v1/health | head -3
              echo "✅ Deployment successful!"
              exit 0
            elif curl -f -s -m 5 http://localhost:8888/ > /dev/null 2>&1; then
              echo "✅ Root endpoint responsive!"
              echo "✅ Deployment successful!"
              exit 0
            else
              echo "❌ Health check failed (attempt $i/6)"
              if [ $i -lt 6 ]; then
                echo "Waiting 20 seconds before next attempt..."
                sleep 20
                echo "📋 Recent logs:"
                docker logs video-downloader-app --tail 5
              fi
            fi
          done
          
          echo "❌ Health check failed after 6 attempts!"
          echo "📋 Final container logs:"
          docker logs video-downloader-app --tail 30
          echo "🌍 Port status:"
          netstat -tlnp | grep :8888
          exit 1
